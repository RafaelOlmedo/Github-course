Curso git e github

-- Realiza configurações de usuário:
	-- Nome:
		-- git config --global user.name "Rafael Olmedo"
	-- E-mail:
		-- git config --global user.email "rafa-olmedo@hotmail.com"
	-- Editor padrão: (sublime)
		-- $ git config --global core.editor s


Inicializa um repositório git:
git init


Status de versão dos arquivos no git:

- Untracked (Não marcada):
	- O arquivo acabou de ser adicionado no repositório, porém o git ainda não conhece o arquivo em nenhuma versão.
- Unmodified (Não modificado):
	- O arquivo já foi subido para o git, porém não foi modificado.
- Modified:
	- O arquivo está no git e foi modificado.
- Staged: (git add)
	- Arquivos que estão marcados que irão fazer parte da versão.


Verificar o status do repositório git:
git status

Adiciona um arquivo para realizar commit
git add <file> / git add . (adiciona todos os arquivos para o commit)

Realizar commit:
git commit -m "Adiciona o arquivo com as anotações referente ao curso do git"

Logs:
- Exibe informações referente aos commits realizados:
git log
git log --decorate (Exibe também informações de qual branch para qual branch)
git log --author="Nome" (Exibe somente os commits de determinado usuário)
git shortlog (Exibe o usuário, quantidade de commits e os comentários dos commits realizados)
git shortlog -sn (Exibe somente o usuário e a quantidade de commits)
git log --graph (Exibe as informações da master/branches a forma de um gráfico)
git show <hash> (Exibe informações detalhadas de determinado commit)

Desfazer alterações antes de realizar o commit:
git checkout NomeArquivo

Apagar as alterações realizadas mesmo após ter realizado o 'git add .'
git reset HEAD 
	-	HEAD indica que quer voltar para a situação antes do add



git reset --soft <hash do commit para o qual eu quero voltar>
	--soft: Volta o commit, porém o arquivo já fica no staged, pronto para realizar o commit novamente (após o add);
	-- mixed: Volta o commit também, porém o arquivo volta para modified (antes do add)
	-- hard: Joga tudo fora.

Vinculando um repositório local com um repositório remoto:
git remote add origin https://github.com/RafaelOlmedo/Github-course.git

Exibe os repositórios:
git remote

Envia todas as informações do repositório local para o repositório remoto:
git push -u origin master
	-u serve para criar um "link" e não precisar ficar digitando tudo nas próximas vezes;
	- origin: pra onde vai;
	- master: de onde vem





GitHub de cara que anotou as coisas com o curso
https://github.com/hemilioaraujo/cmdGit/blob/master/comandosGit.txt